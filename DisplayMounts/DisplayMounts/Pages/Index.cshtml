@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">

    @if (Model.OneMount != null)
    {

        <div class="oneMount">
            <div>
                <a asp-route-return="Index.cshtml" class="returnbtn">Return</a>
                <a><img class="onemountimg" src="@Model.OneMount.ImgLink" /></a>
            </div>
            <h3 class="m-2">@Model.OneMount.Name</h3>
            <h4>Faction: @Model.OneMount.Faction</h4>
            <h4>Expansion: @Model.OneMount.Expansion</h4>

            @if (Model.OneMount.PlayerClass != "Neutral")
            {
                <p>Class: @Model.OneMount.PlayerClass</p>
            }
            <p><a href="@Model.OneMount.WebLink" target="_blank">More Info</a></p>




            @if (User.Identity.IsAuthenticated && Model.MyUser.Faction == Model.OneMount.Faction && Model.MyUser.Class == Model.OneMount.PlayerClass ||
           User.Identity.IsAuthenticated && Model.MyUser.Faction == Model.OneMount.Faction && Model.OneMount.PlayerClass == "Neutral" ||
           User.Identity.IsAuthenticated && Model.OneMount.Faction == "Neutral" && Model.MyUser.Class == Model.OneMount.PlayerClass ||
           User.Identity.IsAuthenticated && Model.OneMount.Faction == "Neutral" && Model.OneMount.PlayerClass == "Neutral")
            {
                <form method="post" asp-page-handler="ToggleMount">
                    <input type="hidden" name="mountId" value="@Model.OneMount.Id" />
                    <button type="submit" class=" m-3
                        @(Model.MountsCollected.Any(x => x.UserId == Model.MyUser.Id && x.MountId == Model.OneMount.Id) ? "btn-danger" : "btn-success") ">
                        @(Model.MountsCollected.Any(x => x.UserId == Model.MyUser.Id && x.MountId == Model.OneMount.Id) ? "Remove From Collection" : "Add To Collection")
                    </button>
                </form>

            }
        </div>

        <div>
            @if (User.Identity.IsAuthenticated)
            {

                <form method="post" asp-page-handler="PostComment">
                    <input type="hidden" name="mountId" value="@Model.OneMount.Id" />
                    <h2>Post A Comment</h2>
                    <textarea asp-for="Comment.Comment" class="form-control" cols="40" rows="5"></textarea>

                    <input type="submit" class="btn btn-success m-2" value="Post Comment">

                </form>
            }
        </div>


        <div class="row">
            @if (Model.Comments != null)
            {
                <h3 class="titlecomments m-3">Comments</h3>
                <hr />
                <br />
                foreach (var comment in Model.Comments)
                {
                    <div class="card m-2" style="width:18rem">

                        <div class="card-body">
                            <h5 class="card-title">User: @comment.UserName</h5>
                            <hr>
                            <p class="card-text">@comment.Comment</p>
                            <hr>
                            @if (User.Identity.IsAuthenticated && Model.MyUser.Id == comment.UserId)
                            {
                                <form method="post" asp-page-handler="RemoveComment">
                                    <input type="hidden" name="commentId" value="@comment.Id" />
                                    <button type="submit" class="btn-danger">Remove Comment</button>
                                </form>
                            }
                        </div>
                        <p class="card-footer">@comment.CommentCreated</p>
                    </div>
                }

            }


        </div>
    }
    else
    {

        <div class="userpreference" id="preference">
            <form method="post">
                <h3>Faction</h3>
                <a>Neutral<input id="NeutralCheckBox" type="checkbox" class="m-1" value="Neutral" name="Preferences.Factions" @(Model.Preferences.Factions != null && Model.Preferences.Factions.Contains("Neutral") ? "checked" : "") /></a>
                <a>Alliance<input id="AllianceCheckBox" type="checkbox" class="m-1" value="Alliance" name="Preferences.Factions" @(Model.Preferences.Factions != null && Model.Preferences.Factions.Contains("Alliance") ? "checked" : "") /></a>
                <a>Horde<input id="HordeCheckBox" type="checkbox" class="m-1" value="Horde" name="Preferences.Factions" @(Model.Preferences.Factions != null && Model.Preferences.Factions.Contains("Horde") ? "checked" : "") /></a>
                <br>

                <h3>Class</h3>
                <a>Neutral<input id="NeutralClassCheckBox" type="checkbox" class="m-1" value="Neutral" name="Preferences.Classes" @(Model.Preferences.Classes != null && Model.Preferences.Classes.Contains("Neutral") ? "checked" : "") /></a>
                <a>Priest<input id="PriestCheckBox" type="checkbox" class="m-1" value="Priest" name="Preferences.Classes" @(Model.Preferences.Classes != null && Model.Preferences.Classes.Contains("Priest") ? "checked" : "") /></a>
                <a>Warlock<input id="WarlockCheckBox" type="checkbox" class="m-1" value="Warlock" name="Preferences.Classes" @(Model.Preferences.Classes != null && Model.Preferences.Classes.Contains("Warlock") ? "checked" : "") /></a>
                <a>Mage<input id="MageCheckBox" type="checkbox" class="m-1" value="Mage" name="Preferences.Classes" @(Model.Preferences.Classes != null && Model.Preferences.Classes.Contains("Mage") ? "checked" : "") /></a>
                <a>Druid<input id="DruidCheckBox" type="checkbox" class="m-1" value="Druid" name="Preferences.Classes" @(Model.Preferences.Classes != null && Model.Preferences.Classes.Contains("Druid") ? "checked" : "") /></a>
                <a>Rogue<input id="RogueCheckBox" type="checkbox" class="m-1" value="Rogue" name="Preferences.Classes" @(Model.Preferences.Classes != null && Model.Preferences.Classes.Contains("Rogue") ? "checked" : "") /></a>
                <a>Shaman<input id="ShamanCheckBox" type="checkbox" class="m-1" value="Shaman" name="Preferences.Classes" @(Model.Preferences.Classes != null && Model.Preferences.Classes.Contains("Shaman") ? "checked" : "") /></a>
                <a>Hunter<input id="HunterCheckBox" type="checkbox" class="m-1" value="Hunter" name="Preferences.Classes" @(Model.Preferences.Classes != null && Model.Preferences.Classes.Contains("Hunter") ? "checked" : "") /></a>
                <a>Warrior<input id="WarriorCheckBox" type="checkbox" class="m-1" value="Warrior" name="Preferences.Classes" @(Model.Preferences.Classes != null && Model.Preferences.Classes.Contains("Warrior") ? "checked" : "") /></a>
                <a>Paladin<input id="PaladinCheckBox" type="checkbox" class="m-1" value="Paladin" name="Preferences.Classes" @(Model.Preferences.Classes != null && Model.Preferences.Classes.Contains("Paladin") ? "checked" : "") /></a>
                <a>Death Knight<input id="DeathKnightCheckBox" type="checkbox" class="m-1" value="Death Knight" name="Preferences.Classes" @(Model.Preferences.Classes != null && Model.Preferences.Classes.Contains("Death Knight") ? "checked" : "") /></a>
                <br>

                <h3>Expansion</h3>
                <a>Vanilla<input id="VanillaCheckBox" type="checkbox" class="m-1" value="Vanilla" name="Preferences.Expansions" @(Model.Preferences.Expansions != null && Model.Preferences.Expansions.Contains("Vanilla") ? "checked" : "") /></a>
                <a>Burning Crusade<input id="BurningCrusadeCheckBox" type="checkbox" class="m-1" value="Burning Crusade" name="Preferences.Expansions" @(Model.Preferences.Expansions != null && Model.Preferences.Expansions.Contains("Burning Crusade") ? "checked" : "") /></a>
                <a>Wrath of the Lich King<input id="WrathOfTheLichKingCheckBox" type="checkbox" class="m-1" value="Wrath of the Lich King" name="Preferences.Expansions" @(Model.Preferences.Expansions != null && Model.Preferences.Expansions.Contains("Wrath of the Lich King") ? "checked" : "") /></a>
                <br>

                @if (User.Identity.IsAuthenticated)
                {
                    <h3>Collected</h3>
                    <a>Collected<input id="CollectedCheckBox" type="checkbox" class="m-1" value="Collected" name="Preferences.Collected" @(Model.Preferences.Collected != null && Model.Preferences.Collected.Contains("Collected") ? "checked" : "") /></a>
                    <a>Not Collected<input id="NotCollectedCheckBox" type="checkbox" class="m-1" value="NotCollected" name="Preferences.Collected" @(Model.Preferences.Collected != null && Model.Preferences.Collected.Contains("NotCollected") ? "checked" : "") /></a>
                }
                <br>
                <button type="submit" class="btn-success mt-2 mb-2">Search Preference</button>
            </form>
        </div>

        <div class="mountpage" id="mountpage">
            @foreach (var mount in Model.ShowMounts)
            {
                <div class="card">
                    @{
                        bool isAuthenticated = User.Identity.IsAuthenticated;
                        bool isCollected = isAuthenticated && Model.MountsCollected.Any(c => c.MountId == mount.Id);
                        string imgClass = !isCollected && isAuthenticated ? "black-and-white-img" : "";
                    }
                    <a asp-route-id="@mount.Id"><img src="@mount.ImgLink" class="@imgClass" /></a>

                    <h3>@mount.Name</h3>
                </div>
            }
            <br />
        </div>

    }
